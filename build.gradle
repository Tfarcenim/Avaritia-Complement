buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "${mc_version}-${mod_version}"
group = "jackyy.avaritiatweaks"
archivesBaseName = "Avaritia's Complement"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "${forge_version}"
    runDir = "run"
    mappings = "${mappings_version}"

  //  replace '@FINGERPRINT@', project.findProperty('signSHA1')
    replaceIn "AvaritiaTweaks.java"
}

repositories {
    maven {
        name = "JEI Maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "Hwyla Maven"
        url = "https://tehnut.info/maven"
    }
    maven {
        name = "CB Maven"
        url = "http://chickenbones.net/maven"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
    maven {
        name = "CraftTweaker Maven"
        url = "http://maven.blamejared.com"
    }
    maven {
        name = "MMD Maven"
        url = 'https://maven.mcmoddev.com' 
    }
}

dependencies {
        // compile against the JEI API but do not include it at runtime
        deobfProvided "mezz.jei:jei_${mc_version}:${jei_version}:api"
        // at runtime, use the full JEI jar
        runtime "mezz.jei:jei_${mc_version}:${jei_version}"
	deobfCompile "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2"
	deobfCompile "codechicken:CodeChickenLib:1.12.2-+:universal"
    
  deobfCompile ("morph.avaritia:Avaritia:1.12-+:universal"){
      transitive = false
  }
  deobfCompile "vazkii.botania:Botania:+"
    deobfCompile "com.azanor:Baubles:${baubles_version}"

}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
		project.hasProperty('keyStore')
	}
	keyStore = project.findProperty('keyStore')
	alias = project.findProperty('keyStoreAlias')
	storePass = project.findProperty('keyStorePass')
	keyPass = project.findProperty('keyStoreKeyPass')
	inputFile = jar.archivePath
	outputFile = jar.archivePath
}

build.dependsOn signJar

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

artifacts {
    archives deobfJar
}
